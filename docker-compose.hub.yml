version: '3.8'

# Docker Compose file for deploying VPN server from Docker Hub images
# Usage: docker-compose -f docker-compose.hub.yml up -d

services:
  vpn-server:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_ORG:-yourusername}/vpn-rust:${VPN_VERSION:-latest}
    container_name: vpn-server
    restart: unless-stopped
    privileged: true
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - vpn-data:/opt/vpn
      - vpn-config:/etc/vpn
      - vpn-logs:/var/log/vpn
    environment:
      - VPN_PROTOCOL=${VPN_PROTOCOL:-vless}
      - VPN_PORT=${VPN_PORT:-443}
      - VPN_SNI=${VPN_SNI:-www.google.com}
      - VPN_INSTALL_PATH=/opt/vpn
      - VPN_CONFIG_PATH=/etc/vpn/config.toml
    command: ["vpn", "install", "--protocol", "${VPN_PROTOCOL:-vless}", "--port", "${VPN_PORT:-443}", "--auto-start"]
    healthcheck:
      test: ["CMD", "vpn", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  vpn-proxy-auth:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_ORG:-yourusername}/vpn-rust-proxy-auth:${VPN_VERSION:-latest}
    container_name: vpn-proxy-auth
    restart: unless-stopped
    depends_on:
      - vpn-server
    networks:
      - vpn-network
    volumes:
      - vpn-data:/opt/vpn:ro
      - vpn-config:/etc/vpn:ro
    environment:
      - AUTH_PORT=3000
      - DATABASE_PATH=/opt/vpn/users
      - LOG_LEVEL=${LOG_LEVEL:-info}
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  traefik:
    image: traefik:v3.0
    container_name: vpn-traefik
    restart: unless-stopped
    depends_on:
      - vpn-proxy-auth
    networks:
      - vpn-network
    ports:
      - "8888:8888"  # HTTP Proxy
      - "8443:8443"  # HTTPS Proxy
      - "1080:1080"  # SOCKS5 Proxy
      - "8080:8080"  # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certs:/certs
      - ./docker/traefik:/etc/traefik:ro
    environment:
      - TRAEFIK_API_DASHBOARD=true
      - TRAEFIK_API_INSECURE=true
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_ENTRYPOINTS_HTTP_ADDRESS=:8888
      - TRAEFIK_ENTRYPOINTS_HTTPS_ADDRESS=:8443
      - TRAEFIK_ENTRYPOINTS_SOCKS_ADDRESS=:1080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.api.service=api@internal"

  prometheus:
    image: prom/prometheus:latest
    container_name: vpn-prometheus
    restart: unless-stopped
    networks:
      - vpn-network
    volumes:
      - prometheus-data:/prometheus
      - ./docker/prometheus:/etc/prometheus:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: vpn-grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - vpn-network
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"

networks:
  vpn-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

volumes:
  vpn-data:
  vpn-config:
  vpn-logs:
  traefik-certs:
  prometheus-data:
  grafana-data: