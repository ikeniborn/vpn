# Global configuration
global:
  resolve_timeout: 5m
  # The smarthost and SMTP sender used for mail notifications (backup notification channel)
  smtp_smarthost: 'smtp.example.com:587'
  smtp_from: 'alertmanager@example.com'
  smtp_auth_username: 'alertmanager'
  smtp_auth_password: 'password'

# Templates for notifications (disabled)
# templates:
#   - '/etc/alertmanager/templates/*.tmpl'

# The root route on which each incoming alert enters
route:
  # The root route must not have any matchers as it is the entry point for all alerts
  # Group alerts by alertname and affected component/instance
  group_by: ['alertname', 'job', 'category']
  
  # Wait this long to buffer alerts of the same group before sending
  group_wait: 30s
  
  # If an alert has been sent, wait this long to send a new notification for the group
  group_interval: 5m
  
  # If an alert has been sent, wait this long before sending a notification again
  repeat_interval: 4h
  
  # Default receiver for all alerts
  receiver: 'telegram-notifications'
  
  # Child routes for specialized handling
  routes:
    # Route critical security alerts
    - match:
        severity: critical
        category: security
      receiver: 'telegram-critical-security'
      group_wait: 10s  # Process security alerts more quickly
      group_interval: 2m
      repeat_interval: 1h
      continue: true

    # Route critical availability alerts
    - match:
        severity: critical
        category: availability
      receiver: 'telegram-critical'
      group_wait: 15s
      group_interval: 2m
      repeat_interval: 1h
      continue: true
    
    # Route critical resource alerts
    - match:
        severity: critical
        category: resources
      receiver: 'telegram-critical'
      group_wait: 20s
      group_interval: 3m
      repeat_interval: 2h
      continue: true

    # Route maintenance alerts
    - match:
        category: maintenance
      receiver: 'telegram-maintenance'
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      continue: true
    
    # Route VPN-specific metrics alerts
    - match:
        category: vpn
      receiver: 'telegram-vpn'
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      continue: true
    
    # Route all warnings
    - match:
        severity: warning
      receiver: 'telegram-notifications'
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 6h

# Inhibition rules allow to mute a set of alerts given that another alert is firing
inhibit_rules:
  # Basic inhibition: don't send warnings for a service that already has criticals
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    # Apply inhibition if the alertname and job are the same
    equal: ['alertname', 'job']

  # Don't send resource warnings if the service is already down
  - source_match:
      severity: 'critical'
      category: 'availability'
    target_match:
      severity: 'warning'
      category: 'resources'
    # Apply if the affected instance is the same
    equal: ['instance']

  # Don't send VPN-specific warnings if there are critical resource issues
  - source_match:
      severity: 'critical'
      category: 'resources'
    target_match:
      severity: 'warning'
      category: 'vpn'
    # Apply if the affected instance is the same
    equal: ['instance']

# Mute timings for scheduled maintenance
mute_time_intervals:
  - name: maintenance
    time_intervals:
      - weekdays: ['saturday', 'sunday']
        times:
          - start_time: '00:00'
            end_time: '06:00'

# Receivers define notification integrations
receivers:
  # Default receiver for all notifications
  - name: 'telegram-notifications'
    telegram_configs:
      - bot_token: '7982416575:AAG2dy1tcojZA_iJNEXnZaXll6Rl-UFSb-k'
        chat_id: 740775802
        parse_mode: 'HTML'
        message: |-
          üîî <b>{{ .Status | toUpper }}</b>
          <b>Alert:</b> {{ .GroupLabels.alertname }}
          <b>Severity:</b> {{ .CommonLabels.severity }}
          <b>Category:</b> {{ .CommonLabels.category }}
          <b>Summary:</b> {{ .CommonAnnotations.summary }}
          <b>Description:</b> {{ .CommonAnnotations.description }}
          <b>Details:</b>
          {{ range .Alerts }}
            <b>- {{ .Labels.instance }}</b>: {{ .Annotations.message }}
          {{ end }}
          {{ if .CommonAnnotations.runbook_url }}
          <b>Runbook:</b> {{ .CommonAnnotations.runbook_url }}
          {{ end }}

  # Critical alerts - more visible formatting
  - name: 'telegram-critical'
    telegram_configs:
      - bot_token: '${TELEGRAM_BOT_TOKEN}'
        chat_id: ${TELEGRAM_CHAT_ID}
        parse_mode: 'HTML'
        message: |-
          üö® <b>CRITICAL ALERT</b> üö®
          <b>Alert:</b> {{ .GroupLabels.alertname }}
          <b>Severity:</b> {{ .CommonLabels.severity }}
          <b>Category:</b> {{ .CommonLabels.category }}
          <b>Summary:</b> {{ .CommonAnnotations.summary }}
          <b>Description:</b> {{ .CommonAnnotations.description }}
          <b>Details:</b>
          {{ range .Alerts }}
            <b>- {{ .Labels.instance }}</b>: {{ .Annotations.message }}
          {{ end }}
          {{ if .CommonAnnotations.runbook_url }}
          <b>Runbook:</b> {{ .CommonAnnotations.runbook_url }}
          {{ end }}

  # Security alerts - unique formatting with security-specific details
  - name: 'telegram-critical-security'
    telegram_configs:
      - bot_token: '${TELEGRAM_BOT_TOKEN}'
        chat_id: ${TELEGRAM_CHAT_ID}
        parse_mode: 'HTML'
        message: |-
          ‚ö†Ô∏è <b>SECURITY ALERT</b> ‚ö†Ô∏è
          <b>Alert:</b> {{ .GroupLabels.alertname }}
          <b>Severity:</b> {{ .CommonLabels.severity }}
          <b>Summary:</b> {{ .CommonAnnotations.summary }}
          <b>Description:</b> {{ .CommonAnnotations.description }}
          <b>Immediate Action Required:</b> {{ .CommonAnnotations.message }}
          <b>Details:</b>
          {{ range .Alerts }}
            <b>- {{ .Labels.instance }}</b>: {{ .Annotations.message }}
          {{ end }}
          {{ if .CommonAnnotations.runbook_url }}
          <b>Security Runbook:</b> {{ .CommonAnnotations.runbook_url }}
          {{ end }}

  # Maintenance alerts - less urgent formatting
  - name: 'telegram-maintenance'
    telegram_configs:
      - bot_token: '${TELEGRAM_BOT_TOKEN}'
        chat_id: ${TELEGRAM_CHAT_ID}
        parse_mode: 'HTML'
        message: |-
          üîß <b>Maintenance Alert</b>
          <b>Alert:</b> {{ .GroupLabels.alertname }}
          <b>Severity:</b> {{ .CommonLabels.severity }}
          <b>Summary:</b> {{ .CommonAnnotations.summary }}
          <b>Description:</b> {{ .CommonAnnotations.description }}
          <b>Action Required:</b> {{ .CommonAnnotations.message }}
          {{ if .CommonAnnotations.runbook_url }}
          <b>Maintenance Guide:</b> {{ .CommonAnnotations.runbook_url }}
          {{ end }}

  # VPN-specific alerts
  - name: 'telegram-vpn'
    telegram_configs:
      - bot_token: '${TELEGRAM_BOT_TOKEN}'
        chat_id: ${TELEGRAM_CHAT_ID}
        parse_mode: 'HTML'
        message: |-
          üîê <b>VPN Service Alert</b>
          <b>Alert:</b> {{ .GroupLabels.alertname }}
          <b>Severity:</b> {{ .CommonLabels.severity }}
          <b>Summary:</b> {{ .CommonAnnotations.summary }}
          <b>Description:</b> {{ .CommonAnnotations.description }}
          <b>Action:</b> {{ .CommonAnnotations.message }}
          <b>Details:</b>
          {{ range .Alerts }}
            <b>- {{ .Labels.instance }}</b>: {{ .Annotations.message }}
          {{ end }}
          {{ if .CommonAnnotations.runbook_url }}
          <b>VPN Runbook:</b> {{ .CommonAnnotations.runbook_url }}
          {{ end }}