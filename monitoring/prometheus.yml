# Prometheus global configuration
global:
  scrape_interval: 15s       # How frequently to scrape targets
  evaluation_interval: 15s   # How frequently to evaluate rules
  scrape_timeout: 10s        # How long until a scrape request times out
  
  # External labels attached to any time series or alerts
  external_labels:
    monitor: 'vpn-monitor'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - 'alertmanager:9093'  # Alertmanager service

# Load rules files
rule_files:
  - "rules/*.yml"  # Load all rule files from rules directory

# A scrape configuration containing endpoints to scrape
scrape_configs:
  # Scrape Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*'
        action: drop  # Drop high cardinality Go runtime metrics

  # Scrape Traefik metrics
  - job_name: 'traefik'
    static_configs:
      - targets: ['traefik:8080']
    metrics_path: /metrics
    scrape_interval: 10s  # More frequent scraping for critical infrastructure
    relabel_configs:
      - source_labels: [__name__]
        regex: 'traefik_entrypoint_requests_total|traefik_router_requests_total|traefik_service_request_duration_seconds.*'
        action: keep  # Only keep essential metrics

  # Scrape Docker containers with service discovery
  - job_name: 'docker'
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        filters:
          - name: label
            values: ['vpn_*']  # Match VPN-related containers
    relabel_configs:
      - source_labels: [__meta_docker_container_name]
        target_label: container_name
      - source_labels: [__meta_docker_container_label_com_docker_compose_service]
        target_label: service
      - source_labels: [__meta_docker_container_label_com_docker_compose_project]
        target_label: project

  # Scrape node exporter metrics (system metrics)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 10s  # More frequent scraping for system metrics
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__name__]
        regex: 'node_(cpu|memory|disk|filesystem|network)_.*'
        action: keep  # Only keep essential system metrics

  # Scrape OutlineVPN metrics
  - job_name: 'outline'
    static_configs:
      - targets: ['outline:8388']
    metrics_path: /metrics
    scrape_timeout: 5s  # Shorter timeout for potential issues
    relabel_configs:
      - source_labels: [__name__]
        regex: 'vpn_.*'
        action: keep  # Only keep VPN-specific metrics

  # Scrape V2Ray metrics
  - job_name: 'v2ray'
    metrics_path: /metrics
    static_configs:
      - targets: ['v2ray:10085']
    scrape_timeout: 5s  # Shorter timeout for potential issues
    relabel_configs:
      - source_labels: [__name__]
        regex: 'v2ray_.*'
        action: keep  # Only keep V2Ray-specific metrics

  # Scrape Backup service metrics
  - job_name: 'backup'
    static_configs:
      - targets: ['backup:9091']  # Assuming backup service exposes metrics
    metrics_path: /metrics
    scrape_interval: 60s  # Less frequent scraping for backup service
    relabel_configs:
      - source_labels: [__name__]
        regex: 'backup_.*'
        action: keep  # Only keep backup-specific metrics

  # Scrape management dashboard metrics
  - job_name: 'management'
    static_configs:
      - targets: ['management:3000']
    metrics_path: /metrics
    scrape_interval: 30s  # Standard scraping for management

  # Scrape Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: /metrics
    scrape_interval: 30s