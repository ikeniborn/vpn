#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ VLESS –∫–ª–∏–µ–Ω—Ç–∞ —Å Web UI –≤ Docker
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç v2rayA –¥–ª—è –≤–µ–±-—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
# –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Ubuntu, Debian, ALT Linux
# –ê–≤—Ç–æ—Ä: Claude
# –í–µ—Ä—Å–∏—è: 2.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;36m'
PURPLE='\033[0;35m'
WHITE='\033[1;37m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}‚úì${NC} $1"
}

error() {
    echo -e "${RED}‚úó [ERROR]${NC} $1"
    exit 1
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  [WARNING]${NC} $1"
}

info() {
    echo -e "${BLUE}‚ÑπÔ∏è  [INFO]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if [ "$EUID" -ne 0 ]; then
    error "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (sudo)"
fi

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞
detect_os() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS_NAME=$(echo ${ID} | tr '[:upper:]' '[:lower:]')
        OS_VERSION=$VERSION_ID
        OS_PRETTY_NAME=$PRETTY_NAME
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ ALT Linux
        if [[ "${ID}" == "altlinux" ]] || [[ "${PRETTY_NAME}" =~ "ALT" ]]; then
            OS_NAME="altlinux"
            PACKAGE_MANAGER="apt-get"
            PACKAGE_UPDATE="apt-get update"
            PACKAGE_INSTALL="apt-get install -y"
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Debian/Ubuntu
        elif [[ "${ID}" == "debian" ]] || [[ "${ID}" == "ubuntu" ]]; then
            PACKAGE_MANAGER="apt"
            PACKAGE_UPDATE="apt update"
            PACKAGE_INSTALL="apt install -y"
        else
            error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: ${PRETTY_NAME}"
        fi
    else
        error "–ù–µ —É–¥–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤. –§–∞–π–ª /etc/os-release –Ω–µ –Ω–∞–π–¥–µ–Ω."
    fi
    
    log "–û–ø—Ä–µ–¥–µ–ª–µ–Ω –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: ${OS_PRETTY_NAME}"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
install_docker() {
    if command -v docker >/dev/null 2>&1; then
        log "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return
    fi
    
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    
    case $OS_NAME in
        altlinux)
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –Ω–∞ ALT Linux
            $PACKAGE_UPDATE
            $PACKAGE_INSTALL docker-ce docker-ce-cli containerd.io docker-compose-plugin curl wget
            systemctl enable docker
            systemctl start docker
            ;;
        debian|ubuntu)
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –Ω–∞ Debian/Ubuntu
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            rm get-docker.sh
            systemctl enable docker
            systemctl start docker
            ;;
        *)
            error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è $OS_NAME"
            ;;
    esac
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if command -v docker >/dev/null 2>&1; then
        log "Docker —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
install_docker_compose() {
    if command -v docker-compose >/dev/null 2>&1; then
        log "Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return
    fi
    
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
    ARCH=$(uname -m)
    case $ARCH in
        x86_64)
            COMPOSE_ARCH="x86_64"
            ;;
        aarch64|arm64)
            COMPOSE_ARCH="aarch64"
            ;;
        armv7l|armhf)
            COMPOSE_ARCH="armv7l"
            ;;
        *)
            error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
            ;;
    esac
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ Docker Compose
    COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -Po '"tag_name": "\K.*?(?=")')
    curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
    
    if command -v docker-compose >/dev/null 2>&1; then
        log "Docker Compose —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker Compose"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
install_dependencies() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    
    case $OS_NAME in
        altlinux)
            $PACKAGE_UPDATE
            $PACKAGE_INSTALL openssl curl wget net-tools
            ;;
        debian|ubuntu)
            $PACKAGE_UPDATE
            $PACKAGE_INSTALL openssl curl wget net-tools
            ;;
    esac
    
    log "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
WORK_DIR="/opt/v2raya-client"
CONFIG_DIR="$WORK_DIR/config"
DATA_DIR="$WORK_DIR/data"

create_directories() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    mkdir -p "$CONFIG_DIR"
    mkdir -p "$DATA_DIR"
    mkdir -p "$WORK_DIR/nginx/conf.d"
    mkdir -p "$WORK_DIR/nginx/ssl"
    chmod -R 755 "$WORK_DIR"
    log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞
check_port_available() {
    local port=$1
    if command -v netstat >/dev/null 2>&1; then
        ! netstat -tuln | grep -q ":$port "
    elif command -v ss >/dev/null 2>&1; then
        ! ss -tuln | grep -q ":$port "
    else
        ! timeout 1 bash -c "</dev/tcp/127.0.0.1/$port" 2>/dev/null
    fi
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞
generate_free_port() {
    local min_port=${1:-2017}
    local max_port=${2:-3017}
    local port
    
    for i in {1..20}; do
        port=$((RANDOM % (max_port - min_port + 1) + min_port))
        if check_port_available $port; then
            echo $port
            return 0
        fi
    done
    
    echo 2017
    return 1
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
generate_password() {
    openssl rand -base64 32 | tr -d "=+/" | cut -c1-16
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
configure_installation() {
    echo ""
    echo -e "${GREEN}üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏${NC}"
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo ""
    
    # –ü–æ—Ä—Ç –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    echo -e "${GREEN}üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä—Ç–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:${NC}"
    echo -e "   ${YELLOW}1${NC} üé≤ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –ø–æ—Ä—Ç–∞"
    echo -e "   ${YELLOW}2${NC} ‚úèÔ∏è  –£–∫–∞–∑–∞—Ç—å –ø–æ—Ä—Ç –≤—Ä—É—á–Ω—É—é"
    echo -e "   ${YELLOW}3${NC} üè¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç (2017)"
    echo ""
    read -p "$(echo -e ${GREEN}–í–∞—à –≤—ã–±–æ—Ä [1]:${NC} )" PORT_CHOICE
    PORT_CHOICE=${PORT_CHOICE:-1}
    
    case $PORT_CHOICE in
        1)
            WEB_PORT=$(generate_free_port 2017 3017)
            log "–í—ã–±—Ä–∞–Ω –ø–æ—Ä—Ç –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: $WEB_PORT"
            ;;
        2)
            while true; do
                read -p "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ [2017]: " WEB_PORT
                WEB_PORT=${WEB_PORT:-2017}
                
                if ! [[ "$WEB_PORT" =~ ^[0-9]+$ ]] || [ "$WEB_PORT" -lt 1024 ] || [ "$WEB_PORT" -gt 65535 ]; then
                    warning "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–æ—Ä—Ç. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1024 –¥–æ 65535."
                    continue
                fi
                
                if check_port_available $WEB_PORT; then
                    log "–ü–æ—Ä—Ç $WEB_PORT —Å–≤–æ–±–æ–¥–µ–Ω"
                    break
                else
                    warning "–ü–æ—Ä—Ç $WEB_PORT —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
                    read -p "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–∞–Ω—è—Ç—ã–π –ø–æ—Ä—Ç? (y/n): " use_port
                    if [ "$use_port" = "y" ]; then
                        break
                    fi
                fi
            done
            ;;
        3)
            WEB_PORT=2017
            ;;
        *)
            WEB_PORT=$(generate_free_port 2017 3017)
            ;;
    esac
    
    # –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    echo ""
    echo -e "${GREEN}üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:${NC}"
    echo -e "   ${YELLOW}1${NC} üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å"
    echo -e "   ${YELLOW}2${NC} ‚úèÔ∏è  –£–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø–∞—Ä–æ–ª—å"
    echo ""
    read -p "$(echo -e ${GREEN}–í–∞—à –≤—ã–±–æ—Ä [1]:${NC} )" PASS_CHOICE
    PASS_CHOICE=${PASS_CHOICE:-1}
    
    case $PASS_CHOICE in
        1)
            ADMIN_PASSWORD=$(generate_password)
            log "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
            ;;
        2)
            while true; do
                read -s -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: " ADMIN_PASSWORD
                echo
                if [ ${#ADMIN_PASSWORD} -lt 8 ]; then
                    warning "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤"
                    continue
                fi
                read -s -p "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å: " ADMIN_PASSWORD_CONFIRM
                echo
                if [ "$ADMIN_PASSWORD" != "$ADMIN_PASSWORD_CONFIRM" ]; then
                    warning "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç"
                    continue
                fi
                break
            done
            ;;
        *)
            ADMIN_PASSWORD=$(generate_password)
            ;;
    esac
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS
    echo ""
    read -p "–í–∫–ª—é—á–∏—Ç—å HTTPS –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞? (y/n) [n]: " ENABLE_HTTPS
    ENABLE_HTTPS=${ENABLE_HTTPS:-n}
    
    if [ "$ENABLE_HTTPS" = "y" ]; then
        HTTPS_PORT=$(generate_free_port 2443 3443)
        log "–í—ã–±—Ä–∞–Ω HTTPS –ø–æ—Ä—Ç: $HTTPS_PORT"
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
        log "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout "$WORK_DIR/nginx/ssl/server.key" \
            -out "$WORK_DIR/nginx/ssl/server.crt" \
            -subj "/C=US/ST=State/L=City/O=Organization/CN=v2raya.local" 2>/dev/null
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ v2rayA
create_v2raya_config() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ v2rayA..."
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    cat > "$CONFIG_DIR/v2raya.conf" <<EOF
# v2rayA configuration
V2RAYA_ADDRESS=0.0.0.0:2017
V2RAYA_CONFIG=/etc/v2raya
EOF
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx
create_nginx_config() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx..."
    
    if [ "$ENABLE_HTTPS" = "y" ]; then
        cat > "$WORK_DIR/nginx/conf.d/v2raya.conf" <<EOF
server {
    listen 80;
    server_name _;
    return 301 https://\$server_name\$request_uri;
}

server {
    listen 443 ssl http2;
    server_name _;
    
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    location / {
        proxy_pass http://v2raya:2017;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_read_timeout 86400;
    }
}
EOF
    else
        cat > "$WORK_DIR/nginx/conf.d/v2raya.conf" <<EOF
server {
    listen 80;
    server_name _;
    
    location / {
        proxy_pass http://v2raya:2017;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_read_timeout 86400;
    }
}
EOF
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ docker-compose.yml
create_docker_compose() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    cat > "$WORK_DIR/docker-compose.yml" <<EOF
services:
  v2raya:
    image: mzz2017/v2raya:latest
    container_name: v2raya
    restart: unless-stopped
    privileged: true
    network_mode: bridge
    volumes:
      - ./data:/etc/v2raya
      - /lib/modules:/lib/modules:ro
      - /etc/resolv.conf:/etc/resolv.conf
      - /dev/net/tun:/dev/net/tun
    environment:
      - V2RAYA_ADDRESS=0.0.0.0:2017
      - V2RAYA_LOG_FILE=/var/log/v2raya/v2raya.log
      - IPTABLES_MODE=nftables
      - V2RAYA_TRANSPARENT=false
      - V2RAYA_NFTABLES_SUPPORT=on
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
EOF

    # –ï—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º nginx, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç –Ω–∞–ø—Ä—è–º—É—é
    if [ "$ENABLE_HTTPS" != "y" ]; then
        cat >> "$WORK_DIR/docker-compose.yml" <<EOF
    ports:
      - "${WEB_PORT}:2017"
      - "20170:20170"  # SOCKS5 proxy
      - "20171:20171"  # HTTP proxy
      - "20172:20172"  # Mixed proxy
EOF
    fi

    cat >> "$WORK_DIR/docker-compose.yml" <<EOF

  nginx:
    image: nginx:alpine
    container_name: v2raya-nginx
    restart: unless-stopped
    ports:
EOF

    if [ "$ENABLE_HTTPS" = "y" ]; then
        cat >> "$WORK_DIR/docker-compose.yml" <<EOF
      - "${WEB_PORT}:80"
      - "${HTTPS_PORT}:443"
EOF
    else
        cat >> "$WORK_DIR/docker-compose.yml" <<EOF
      - "${WEB_PORT}:80"
EOF
    fi

    cat >> "$WORK_DIR/docker-compose.yml" <<EOF
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - v2raya
    networks:
      - v2raya-network

networks:
  v2raya-network:
    driver: bridge
EOF
}

# –°–æ–∑–¥–∞–Ω–∏–µ docker-compose –¥–ª—è –ø—Ä–æ—Å—Ç–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–µ–∑ nginx
create_simple_docker_compose() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    cat > "$WORK_DIR/docker-compose.yml" <<EOF
services:
  v2raya:
    image: mzz2017/v2raya:latest
    container_name: v2raya
    restart: unless-stopped
    privileged: true
    network_mode: bridge
    ports:
      - "${WEB_PORT}:2017"
      - "20170:20170"  # SOCKS5 proxy
      - "20171:20171"  # HTTP proxy
      - "20172:20172"  # Mixed proxy
    volumes:
      - ./data:/etc/v2raya
      - /lib/modules:/lib/modules:ro
      - /etc/resolv.conf:/etc/resolv.conf
      - /dev/net/tun:/dev/net/tun
    environment:
      - V2RAYA_ADDRESS=0.0.0.0:2017
      - V2RAYA_LOG_FILE=/var/log/v2raya/v2raya.log
      - IPTABLES_MODE=nftables
      - V2RAYA_TRANSPARENT=false
      - V2RAYA_NFTABLES_SUPPORT=on
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
EOF
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
create_management_script() {
    local script_path="/usr/local/bin/v2raya-client"
    
    cat > "$script_path" <<'EOF'
#!/bin/bash

WORK_DIR="/opt/v2raya-client"

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;36m'
PURPLE='\033[0;35m'
NC='\033[0m'

show_menu() {
    echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BLUE}‚ïë${NC}      ${GREEN}v2rayA Client Management${NC}              ${BLUE}‚ïë${NC}"
    echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    echo "1. üåê –û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    echo "2. ‚ñ∂Ô∏è  –ó–∞–ø—É—Å—Ç–∏—Ç—å v2rayA"
    echo "3. ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å v2rayA"
    echo "4. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å v2rayA"
    echo "5. üìä –°—Ç–∞—Ç—É—Å —Å–ª—É–∂–±"
    echo "6. üìù –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
    echo "7. üîß –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏"
    echo "8. üîê –°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    echo "9. üÜô –û–±–Ω–æ–≤–∏—Ç—å v2rayA"
    echo "10. üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å v2rayA –∫–ª–∏–µ–Ω—Ç"
    echo "0. üö™ –í—ã—Ö–æ–¥"
    echo ""
}

get_connection_info() {
    if [ -f "$WORK_DIR/.env" ]; then
        source "$WORK_DIR/.env"
    fi
    
    local ip=$(hostname -I | awk '{print $1}')
    
    echo -e "${GREEN}–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏:${NC}"
    echo -e "  –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: ${YELLOW}http://$ip:$WEB_PORT${NC}"
    if [ "$ENABLE_HTTPS" = "y" ]; then
        echo -e "  HTTPS: ${YELLOW}https://$ip:$HTTPS_PORT${NC}"
    fi
    echo -e "  –õ–æ–≥–∏–Ω: ${YELLOW}admin${NC}"
    if [ -n "$ADMIN_PASSWORD" ]; then
        echo -e "  –ü–∞—Ä–æ–ª—å: ${YELLOW}$ADMIN_PASSWORD${NC}"
    fi
    echo ""
    echo -e "${BLUE}–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏:${NC}"
    echo -e "  SOCKS5: ${YELLOW}127.0.0.1:20170${NC}"
    echo -e "  HTTP: ${YELLOW}127.0.0.1:20171${NC}"
    echo -e "  Mixed: ${YELLOW}127.0.0.1:20172${NC}"
    echo ""
    echo -e "${BLUE}–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä:${NC}"
    echo -e "  1. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä"
    echo -e "  2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É –≤—ã—à–µ"
    echo -e "  3. –í–æ–π–¥–∏—Ç–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
    echo -e "  4. –î–æ–±–∞–≤—å—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å"
    echo -e "  5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ–∫—Å–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
}

open_webui() {
    local ip=$(hostname -I | awk '{print $1}')
    local url="http://$ip:$WEB_PORT"
    
    echo -e "${GREEN}–û—Ç–∫—Ä—ã—Ç–∏–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...${NC}"
    echo -e "URL: ${YELLOW}$url${NC}"
    
    if command -v xdg-open >/dev/null 2>&1; then
        xdg-open "$url" 2>/dev/null
    else
        echo -e "${YELLOW}–û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: $url${NC}"
    fi
}

status_services() {
    echo -e "${GREEN}–°—Ç–∞—Ç—É—Å —Å–ª—É–∂–±:${NC}"
    cd "$WORK_DIR"
    docker-compose ps
}

view_logs() {
    echo -e "${GREEN}–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª—É–∂–±—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤:${NC}"
    echo "1. v2rayA"
    echo "2. Nginx (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)"
    echo "3. –í—Å–µ —Å–ª—É–∂–±—ã"
    read -p "–í—ã–±–æ—Ä: " log_choice
    
    cd "$WORK_DIR"
    case $log_choice in
        1) docker-compose logs -f --tail=50 v2raya;;
        2) docker-compose logs -f --tail=50 nginx;;
        3) docker-compose logs -f --tail=50;;
        *) docker-compose logs -f --tail=50;;
    esac
}

reset_password() {
    echo -e "${YELLOW}–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...${NC}"
    local new_password=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-16)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –≤ —Ñ–∞–π–ª–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [ -f "$WORK_DIR/.env" ]; then
        sed -i "s/ADMIN_PASSWORD=.*/ADMIN_PASSWORD=$new_password/" "$WORK_DIR/.env"
    else
        echo "ADMIN_PASSWORD=$new_password" > "$WORK_DIR/.env"
    fi
    
    echo -e "${GREEN}–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: ${YELLOW}$new_password${NC}"
    echo -e "${YELLOW}–ó–∞–ø–∏—à–∏—Ç–µ —ç—Ç–æ—Ç –ø–∞—Ä–æ–ª—å!${NC}"
}

update_v2raya() {
    echo -e "${GREEN}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ v2rayA...${NC}"
    cd "$WORK_DIR"
    docker-compose pull
    docker-compose up -d
    echo -e "${GREEN}v2rayA –æ–±–Ω–æ–≤–ª–µ–Ω${NC}"
}

uninstall_client() {
    echo -e "${RED}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${RED}‚ïë        –£–î–ê–õ–ï–ù–ò–ï v2rayA –ö–õ–ò–ï–ù–¢–ê               ‚ïë${NC}"
    echo -e "${RED}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ! –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã:${NC}"
    echo -e "  ‚Ä¢ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã v2rayA"
    echo -e "  ‚Ä¢ Docker –æ–±—Ä–∞–∑—ã v2rayA –∏ nginx"
    echo -e "  ‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ $WORK_DIR"
    echo -e "  ‚Ä¢ –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è v2raya-client"
    echo -e "  ‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞ –¥–ª—è –ø–æ—Ä—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞"
    echo ""
    read -p "$(echo -e ${RED}–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? [y/N]:${NC} )" confirm
    
    if [ "$confirm" != "y" ] && [ "$confirm" != "Y" ]; then
        echo -e "${GREEN}–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ${NC}"
        return
    fi
    
    echo -e "${YELLOW}–ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ...${NC}"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    echo -e "${BLUE}1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
    cd "$WORK_DIR" 2>/dev/null && docker-compose down -v
    
    # –£–¥–∞–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤
    echo -e "${BLUE}2. –£–¥–∞–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤...${NC}"
    docker rmi mzz2017/v2raya:latest 2>/dev/null || true
    docker rmi nginx:alpine 2>/dev/null || true
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Ä—Ç–æ–≤
    if [ -f "$WORK_DIR/.env" ]; then
        source "$WORK_DIR/.env"
    fi
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —Ñ–∞–π—Ä–≤–æ–ª–∞
    echo -e "${BLUE}3. –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —Ñ–∞–π—Ä–≤–æ–ª–∞...${NC}"
    if command -v ufw >/dev/null 2>&1; then
        ufw delete allow ${WEB_PORT:-2017}/tcp 2>/dev/null || true
        ufw delete allow 20170/tcp 2>/dev/null || true
        ufw delete allow 20171/tcp 2>/dev/null || true
        ufw delete allow 20172/tcp 2>/dev/null || true
        if [ -n "$HTTPS_PORT" ]; then
            ufw delete allow $HTTPS_PORT/tcp 2>/dev/null || true
        fi
        ufw reload
    elif command -v firewall-cmd >/dev/null 2>&1; then
        firewall-cmd --permanent --remove-port=${WEB_PORT:-2017}/tcp 2>/dev/null || true
        firewall-cmd --permanent --remove-port=20170/tcp 2>/dev/null || true
        firewall-cmd --permanent --remove-port=20171/tcp 2>/dev/null || true
        firewall-cmd --permanent --remove-port=20172/tcp 2>/dev/null || true
        if [ -n "$HTTPS_PORT" ]; then
            firewall-cmd --permanent --remove-port=$HTTPS_PORT/tcp 2>/dev/null || true
        fi
        firewall-cmd --reload
    fi
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏
    echo -e "${BLUE}4. –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...${NC}"
    rm -rf "$WORK_DIR"
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    echo -e "${BLUE}5. –£–¥–∞–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...${NC}"
    rm -f /usr/local/bin/v2raya-client
    
    # –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö Docker —Ä–µ—Å—É—Ä—Å–æ–≤
    echo -e "${BLUE}6. –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤...${NC}"
    docker system prune -f
    
    echo ""
    echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${GREEN}‚ïë    ‚úÖ v2rayA –∫–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!         ‚ïë${NC}"
    echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    echo -e "${YELLOW}–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:${NC}"
    echo -e "  ${BLUE}sudo ./install_client.sh${NC}"
    echo ""
    
    exit 0
}

while true; do
    show_menu
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: " choice
    
    case $choice in
        1) open_webui;;
        2) 
            cd "$WORK_DIR"
            docker-compose up -d
            echo -e "${GREEN}v2rayA –∑–∞–ø—É—â–µ–Ω${NC}"
            ;;
        3)
            cd "$WORK_DIR"
            docker-compose down
            echo -e "${GREEN}v2rayA –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
            ;;
        4)
            cd "$WORK_DIR"
            docker-compose restart
            echo -e "${GREEN}v2rayA –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω${NC}"
            ;;
        5) status_services;;
        6) view_logs;;
        7) get_connection_info;;
        8) reset_password;;
        9) update_v2raya;;
        10) uninstall_client;;
        0) exit 0;;
        *) echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä${NC}";;
    esac
    
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    clear
done
EOF

    chmod +x "$script_path"
    log "–°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω: $script_path"
}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
save_configuration() {
    cat > "$WORK_DIR/.env" <<EOF
# v2rayA Client Configuration
WEB_PORT=$WEB_PORT
ENABLE_HTTPS=$ENABLE_HTTPS
HTTPS_PORT=${HTTPS_PORT:-}
ADMIN_PASSWORD=$ADMIN_PASSWORD
INSTALL_DATE=$(date -Iseconds)
EOF
    
    chmod 600 "$WORK_DIR/.env"
    log "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"
}

# –ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±
start_services() {
    log "–ó–∞–ø—É—Å–∫ v2rayA..."
    
    cd "$WORK_DIR"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    if docker ps -a | grep -q "v2raya"; then
        log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        docker-compose down
    fi
    
    # –ó–∞–ø—É—Å–∫ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    if docker-compose up -d; then
        log "v2rayA —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å v2rayA"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    sleep 5
    if docker ps | grep -q "v2raya"; then
        log "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
    else
        error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
setup_firewall() {
    if command -v ufw >/dev/null 2>&1; then
        log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW..."
        ufw allow $WEB_PORT/tcp comment "v2rayA Web UI"
        ufw allow 20170/tcp comment "v2rayA SOCKS5"
        ufw allow 20171/tcp comment "v2rayA HTTP"
        ufw allow 20172/tcp comment "v2rayA Mixed"
        if [ "$ENABLE_HTTPS" = "y" ]; then
            ufw allow $HTTPS_PORT/tcp comment "v2rayA HTTPS"
        fi
        ufw reload
    elif command -v firewall-cmd >/dev/null 2>&1; then
        log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewalld..."
        firewall-cmd --permanent --add-port=$WEB_PORT/tcp
        firewall-cmd --permanent --add-port=20170/tcp
        firewall-cmd --permanent --add-port=20171/tcp
        firewall-cmd --permanent --add-port=20172/tcp
        if [ "$ENABLE_HTTPS" = "y" ]; then
            firewall-cmd --permanent --add-port=$HTTPS_PORT/tcp
        fi
        firewall-cmd --reload
    fi
}

# –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–µ
show_installation_info() {
    local ip=$(hostname -I | awk '{print $1}')
    
    echo ""
    echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${GREEN}‚ïë${NC}    üéâ ${WHITE}v2rayA –ö–õ–ò–ï–ù–¢ –£–°–ü–ï–®–ù–û –£–°–¢–ê–ù–û–í–õ–ï–ù!${NC} üéâ        ${GREEN}‚ïë${NC}"
    echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    echo -e "${BLUE}üåê –î–æ—Å—Ç—É–ø –∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É:${NC}"
    echo -e "  ‚Ä¢ –õ–æ–∫–∞–ª—å–Ω–æ: ${YELLOW}http://localhost:$WEB_PORT${NC}"
    echo -e "  ‚Ä¢ –ü–æ —Å–µ—Ç–∏: ${YELLOW}http://$ip:$WEB_PORT${NC}"
    if [ "$ENABLE_HTTPS" = "y" ]; then
        echo -e "  ‚Ä¢ HTTPS: ${YELLOW}https://$ip:$HTTPS_PORT${NC}"
    fi
    echo ""
    echo -e "${BLUE}üîê –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:${NC}"
    echo -e "  ‚Ä¢ –õ–æ–≥–∏–Ω: ${YELLOW}admin${NC}"
    echo -e "  ‚Ä¢ –ü–∞—Ä–æ–ª—å: ${YELLOW}$ADMIN_PASSWORD${NC}"
    echo ""
    echo -e "${BLUE}üì± –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ v2rayA:${NC}"
    echo -e "  ‚úì –ü–æ–¥–¥–µ—Ä–∂–∫–∞ VLESS, VMess, Trojan, Shadowsocks"
    echo -e "  ‚úì –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –ø–æ —Å—Å—ã–ª–∫–∞–º"
    echo -e "  ‚úì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏"
    echo -e "  ‚úì –ü—Ä–∞–≤–∏–ª–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏"
    echo -e "  ‚úì SOCKS5/HTTP –ø—Ä–æ–∫—Å–∏ (–ø–æ—Ä—Ç—ã 20170/20171)"
    echo -e "  ‚úì –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞"
    echo ""
    echo -e "${BLUE}üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–º:${NC}"
    echo -e "  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: ${YELLOW}sudo v2raya-client${NC}"
    echo ""
    echo -e "${PURPLE}üí° –ü–µ—Ä–≤—ã–µ —à–∞–≥–∏:${NC}"
    echo -e "  1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
    echo -e "  2. –í–æ–π–¥–∏—Ç–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
    echo -e "  3. –ù–∞–∂–º–∏—Ç–µ '+' –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞"
    echo -e "  4. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É vless:// –∏–ª–∏ –¥—Ä—É–≥—É—é"
    echo -e "  5. –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –Ω–∞–∂–º–∏—Ç–µ 'Connect'"
    echo -e "  6. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ SOCKS5 –ø—Ä–æ–∫—Å–∏:"
    echo -e "     ‚Ä¢ –ê–¥—Ä–µ—Å: ${YELLOW}127.0.0.1${NC}"
    echo -e "     ‚Ä¢ –ü–æ—Ä—Ç: ${YELLOW}20170${NC} (SOCKS5) –∏–ª–∏ ${YELLOW}20171${NC} (HTTP)"
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  –í–ê–ñ–ù–û: –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!${NC}"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ (–¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞)
uninstall_client_main() {
    echo -e "${RED}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${RED}‚ïë        –£–î–ê–õ–ï–ù–ò–ï v2rayA –ö–õ–ò–ï–ù–¢–ê               ‚ïë${NC}"
    echo -e "${RED}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ! –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã:${NC}"
    echo -e "  ‚Ä¢ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã v2rayA"
    echo -e "  ‚Ä¢ Docker –æ–±—Ä–∞–∑—ã v2rayA –∏ nginx"
    echo -e "  ‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ $WORK_DIR"
    echo -e "  ‚Ä¢ –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è v2raya-client"
    echo -e "  ‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞ –¥–ª—è –ø–æ—Ä—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞"
    echo ""
    read -p "$(echo -e ${RED}–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? [y/N]:${NC} )" confirm
    
    if [ "$confirm" != "y" ] && [ "$confirm" != "Y" ]; then
        echo -e "${GREEN}–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ${NC}"
        exit 0
    fi
    
    echo -e "${YELLOW}–ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ...${NC}"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    echo -e "${BLUE}1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
    cd "$WORK_DIR" 2>/dev/null && docker-compose down -v
    
    # –£–¥–∞–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤
    echo -e "${BLUE}2. –£–¥–∞–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤...${NC}"
    docker rmi mzz2017/v2raya:latest 2>/dev/null || true
    docker rmi nginx:alpine 2>/dev/null || true
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Ä—Ç–æ–≤
    if [ -f "$WORK_DIR/.env" ]; then
        source "$WORK_DIR/.env"
    fi
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —Ñ–∞–π—Ä–≤–æ–ª–∞
    echo -e "${BLUE}3. –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —Ñ–∞–π—Ä–≤–æ–ª–∞...${NC}"
    if command -v ufw >/dev/null 2>&1; then
        ufw delete allow ${WEB_PORT:-2017}/tcp 2>/dev/null || true
        ufw delete allow 20170/tcp 2>/dev/null || true
        ufw delete allow 20171/tcp 2>/dev/null || true
        ufw delete allow 20172/tcp 2>/dev/null || true
        if [ -n "$HTTPS_PORT" ]; then
            ufw delete allow $HTTPS_PORT/tcp 2>/dev/null || true
        fi
        ufw reload
    elif command -v firewall-cmd >/dev/null 2>&1; then
        firewall-cmd --permanent --remove-port=${WEB_PORT:-2017}/tcp 2>/dev/null || true
        firewall-cmd --permanent --remove-port=20170/tcp 2>/dev/null || true
        firewall-cmd --permanent --remove-port=20171/tcp 2>/dev/null || true
        firewall-cmd --permanent --remove-port=20172/tcp 2>/dev/null || true
        if [ -n "$HTTPS_PORT" ]; then
            firewall-cmd --permanent --remove-port=$HTTPS_PORT/tcp 2>/dev/null || true
        fi
        firewall-cmd --reload
    fi
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏
    echo -e "${BLUE}4. –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...${NC}"
    rm -rf "$WORK_DIR"
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    echo -e "${BLUE}5. –£–¥–∞–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...${NC}"
    rm -f /usr/local/bin/v2raya-client
    
    # –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö Docker —Ä–µ—Å—É—Ä—Å–æ–≤
    echo -e "${BLUE}6. –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤...${NC}"
    docker system prune -f
    
    echo ""
    echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${GREEN}‚ïë    ‚úÖ v2rayA –∫–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!         ‚ïë${NC}"
    echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    echo -e "${YELLOW}–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:${NC}"
    echo -e "  ${BLUE}sudo ./install_client.sh${NC}"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
install_client() {
    echo ""
    echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BLUE}‚ïë${NC}   üöÄ ${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ v2rayA –∫–ª–∏–µ–Ω—Ç–∞ —Å Web UI${NC}    ${BLUE}‚ïë${NC}"
    echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –û–°
    detect_os
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    install_docker
    install_docker_compose
    install_dependencies
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    create_directories
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    configure_installation
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
    create_v2raya_config
    
    # –í—ã–±–æ—Ä —Ç–∏–ø–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if [ "$ENABLE_HTTPS" = "y" ]; then
        create_nginx_config
        create_docker_compose
    else
        create_simple_docker_compose
    fi
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    save_configuration
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    create_management_script
    
    # –ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±
    start_services
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
    setup_firewall
    
    # –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    show_installation_info
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
show_main_menu() {
    echo ""
    echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BLUE}‚ïë${NC}    ${GREEN}v2rayA Client Management System${NC}         ${BLUE}‚ïë${NC}"
    echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    echo -e "${GREEN}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo ""
    echo -e "  ${YELLOW}1${NC} üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å v2rayA –∫–ª–∏–µ–Ω—Ç"
    echo -e "  ${YELLOW}2${NC} üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å v2rayA –∫–ª–∏–µ–Ω—Ç"
    echo -e "  ${YELLOW}3${NC} üö™ –í—ã—Ö–æ–¥"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ –∫–ª–∏–µ–Ω—Ç
    if [ -f "/usr/local/bin/v2raya-client" ] && [ -d "$WORK_DIR" ]; then
        # –ö–ª–∏–µ–Ω—Ç —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        echo ""
        echo -e "${GREEN}‚úì v2rayA –∫–ª–∏–µ–Ω—Ç —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        echo ""
        echo -e "${BLUE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
        echo ""
        echo -e "  ${YELLOW}1${NC} üîß –û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
        echo -e "  ${YELLOW}2${NC} üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å v2rayA –∫–ª–∏–µ–Ω—Ç"
        echo -e "  ${YELLOW}3${NC} üö™ –í—ã—Ö–æ–¥"
        echo ""
        read -p "$(echo -e ${GREEN}–í–∞—à –≤—ã–±–æ—Ä [1-3]:${NC} )" choice
        
        case $choice in
            1)
                exec /usr/local/bin/v2raya-client
                ;;
            2)
                uninstall_client_main
                ;;
            3)
                echo -e "${GREEN}–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
                exit 1
                ;;
        esac
    else
        # –ö–ª–∏–µ–Ω—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        show_main_menu
        read -p "$(echo -e ${GREEN}–í–∞—à –≤—ã–±–æ—Ä [1-3]:${NC} )" choice
        
        case $choice in
            1)
                install_client
                ;;
            2)
                echo -e "${YELLOW}v2rayA –∫–ª–∏–µ–Ω—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
                exit 0
                ;;
            3)
                echo -e "${GREEN}–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
                exit 1
                ;;
        esac
    fi
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main