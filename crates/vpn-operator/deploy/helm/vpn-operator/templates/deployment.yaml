apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vpn-operator.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "vpn-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.operator.replicas }}
  selector:
    matchLabels:
      {{- include "vpn-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "vpn-operator.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.operator.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vpn-operator.serviceAccountName" . }}
      {{- with .Values.operator.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: operator
        image: "{{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
        command:
        - /usr/local/bin/vpn-operator
        args:
        - --config=/etc/vpn-operator/config.yaml
        - --metrics-port={{ .Values.metrics.port }}
        - --webhook-port={{ .Values.webhook.port }}
        {{- if eq .Values.logging.level "debug" }}
        - --debug
        {{- end }}
        env:
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPERATOR_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        {{- if .Values.operator.watchNamespace }}
        - name: WATCH_NAMESPACE
          value: {{ .Values.operator.watchNamespace | quote }}
        {{- end }}
        {{- with .Values.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - name: metrics
          containerPort: {{ .Values.metrics.port }}
          protocol: TCP
        {{- if .Values.webhook.enabled }}
        - name: webhook
          containerPort: {{ .Values.webhook.port }}
          protocol: TCP
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: metrics
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.operator.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/vpn-operator
          readOnly: true
        {{- if .Values.webhook.enabled }}
        - name: webhook-certs
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
        {{- end }}
        {{- with .Values.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "vpn-operator.fullname" . }}
      {{- if .Values.webhook.enabled }}
      - name: webhook-certs
        secret:
          secretName: {{ include "vpn-operator.webhookCertSecret" . }}
          optional: true
      {{- end }}
      {{- with .Values.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.operator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}