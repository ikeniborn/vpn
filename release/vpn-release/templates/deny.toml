# deny.toml - Configuration for cargo-deny
# This file configures dependency checking for security, licensing, and other issues

[graph]
# The graph table configures how the dependency graph is constructed and thus
# which crates the checks are performed against
targets = [
    # The triple can be any target triple which is valid for use by rustc
    { triple = "x86_64-unknown-linux-gnu" },
    { triple = "aarch64-unknown-linux-gnu" },
    { triple = "armv7-unknown-linux-gnueabihf" },
]

[advisories]
# The advisories section is used for security vulnerability checking
db-path = "~/.cargo/advisory-db"
db-urls = ["https://github.com/rustsec/advisory-db"]
vulnerability = "deny"
unmaintained = "warn"
yanked = "deny"
notice = "warn"
ignore = [
    # Example: Ignore specific advisories by ID
    # "RUSTSEC-2019-0001",
]

[licenses]
# The licenses section controls which licenses are allowed
unlicensed = "deny"
# Warn on copyleft licenses which might require source disclosure
copyleft = "warn"
# We want to allow common permissive licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "CC0-1.0",
    "MPL-2.0", # Mozilla Public License, weak copyleft
]
# Deny specific licenses that are incompatible with our project
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-3.0",
    "LGPL-2.0",
    "LGPL-2.1",
    "LGPL-3.0",
]

# Some crates don't have a license field, or it's non-standard
[[licenses.clarify]]
name = "ring"
expression = "MIT AND ISC AND OpenSSL"
license-files = [
    { path = "LICENSE", hash = 0xbd0eed23 }
]

[bans]
# Lint level for when multiple versions of the same dependency are detected
multiple-versions = "warn"
# Lint level for when a crate marked as 'wildcard-dependencies' has a wildcard dependency
wildcards = "allow"
# The graph highlighting used when creating dotgraphs for crates
# with multiple versions
# * lowest-version - The path to the lowest versioned duplicate is highlighted
# * simplest-path - The path to the version with the fewest edges is highlighted
# * all - Both lowest-version and simplest-path are used
highlight = "all"

# List of crates to deny
deny = [
    # Each entry can be just a crate name
    { name = "openssl" }, # We prefer rustls
    { name = "pcre2" }, # Prefer regex crate
]

# Certain crates/versions that will be skipped when doing duplicate detection.
skip = [
    # { name = "winapi", version = "=0.2.8" },
]

# Skip certain crates when duplicate versions are detected
skip-tree = [
    # { name = "windows-sys", version = "0.42" },
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is not in the allow list is encountered
unknown-registry = "deny"
# Lint level for what to happen when a crate from a git repository that is not in the allow list is encountered
unknown-git = "deny"
# List of allowed crate registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of allowed Git repositories
allow-git = []