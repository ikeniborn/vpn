global
    log stdout local0
    maxconn 4096
    daemon
    
    # Performance tuning
    tune.ssl.default-dh-param 2048
    
    # Enable stats
    stats socket /var/run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s

defaults
    log     global
    mode    tcp
    option  tcplog
    option  dontlognull
    timeout connect 5000ms
    timeout client  30000ms
    timeout server  30000ms
    
    # Health check defaults
    default-server inter 3s rise 2 fall 3

# Statistics
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 30s
    stats show-node
    stats show-legends
    stats hide-version
    
    # Basic auth for stats (change in production)
    stats auth admin:${HAPROXY_STATS_PASSWORD:-admin}

# VPN Server Load Balancing (TCP mode for VLESS)
listen vpn-servers
    bind *:8443
    mode tcp
    balance leastconn
    
    # Stick sessions based on source IP
    stick-table type ip size 100k expire 30m
    stick on src
    
    # Enable health checks
    option tcp-check
    tcp-check connect
    tcp-check send GET\ /health\ HTTP/1.1\r\n\r\n
    tcp-check expect string OK
    
    # Dynamic server discovery via DNS
    server-template vpn-server- 1-10 vpn-server:8443 check resolvers docker init-addr libc,none

# HTTP/HTTPS API Load Balancing
frontend api-frontend
    bind *:3000
    mode http
    option httplog
    
    # Add headers
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header X-Real-IP %[src]
    
    # Rate limiting
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny if { sc_http_req_rate(0) gt 20 }
    
    default_backend api-backend

backend api-backend
    mode http
    balance roundrobin
    option httpchk GET /health
    
    # Retry policy
    retry-on all-retryable-errors
    retries 3
    
    # Connection pooling
    http-reuse safe
    
    # Circuit breaker
    option redispatch
    
    # Session persistence
    cookie SERVERID insert indirect nocache httponly secure
    
    # Dynamic server discovery
    server-template vpn-api- 1-10 vpn-api:3000 check cookie vpn-api- resolvers docker init-addr libc,none

# DNS resolver for Docker
resolvers docker
    nameserver dns1 127.0.0.11:53
    resolve_retries 3
    timeout resolve 1s
    timeout retry   1s
    hold other      30s
    hold refused    30s
    hold nx         30s
    hold timeout    30s
    hold valid      10s
    hold obsolete   30s