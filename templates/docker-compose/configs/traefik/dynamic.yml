# Dynamic configuration for Traefik
# This file contains routes, services, and TLS configurations

# TLS Options
tls:
  options:
    default:
      minVersion: "VersionTLS12"
      cipherSuites:
        - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
        - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
        - "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
      
    modern:
      minVersion: "VersionTLS13"
      maxVersion: "VersionTLS13"
      cipherSuites: []  # TLS 1.3 uses default cipher suites

# HTTP to HTTPS redirect middleware
http:
  middlewares:
    # Security headers
    security-headers:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
          - POST
          - DELETE
        accessControlAllowOriginList:
          - "*"
        accessControlMaxAge: 100
        addVaryHeader: true
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        customResponseHeaders:
          X-Frame-Options: "SAMEORIGIN"
          X-Content-Type-Options: "nosniff"
          X-XSS-Protection: "1; mode=block"
          Strict-Transport-Security: "max-age=63072000; includeSubDomains; preload"
          Content-Security-Policy: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"
    
    # Basic authentication for admin interfaces
    admin-auth:
      basicAuth:
        users:
          - "admin:$2y$10$2b2cu/bieptU1ufP2/h5..vhWJgB4vg7/3t3JcE4/hjK7Q4QaEOKu"  # admin:admin
    
    # Rate limiting
    rate-limit:
      rateLimit:
        burst: 100
        period: 1m
        average: 50
    
    # Gzip compression
    gzip-compression:
      compress: {}
    
    # Chain common middlewares
    default-middlewares:
      chain:
        middlewares:
          - security-headers
          - gzip-compression
          - rate-limit

  # Static routes for health checks and admin interfaces
  routers:
    # Traefik dashboard
    dashboard:
      rule: "Host(`traefik.vpn.local`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      service: api@internal
      middlewares:
        - admin-auth
        - default-middlewares
      tls:
        certResolver: letsencrypt

  services:
    # Example service definitions (Docker provider will discover most services)
    vpn-api:
      loadBalancer:
        servers:
          - url: "http://vpn-api:8080"
        healthCheck:
          path: "/health"
          interval: "30s"
          timeout: "5s"
          
    vpn-identity:
      loadBalancer:
        servers:
          - url: "http://vpn-identity:8080"
        healthCheck:
          path: "/health"
          interval: "30s"
          timeout: "5s"